swagger: "2.0"
info:
  description: "Food Menu API"
  version: "1.0.0"
  title: "Menu API"
  contact:
    email: "alex.cicioc1@gmail.com"
host: "localhost:8000"
basePath: "/v1"
tags:
  - name: "menu"
    description: "Everything about the restaurant's menu"
schemes:
  - "http"
paths:
  /menus:
    get:
      tags:
        - "menu"
      summary: "Get a list of food menus"
      operationId: "getFoodMenus"
      produces:
        - "application/json"
      parameters:
        - $ref: '#/parameters/limitQuery'
        - $ref: '#/parameters/offsetQuery'
        - name: "status"
          in: "query"
          description: "Status values that need to be considered for filter"
          type: array
          required: true
          items:
            type: string
            enum:
              - published
              - draft
            default: draft
          collectionFormat: "multi"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: array
            items:
              $ref: "#/definitions/MenuList"
        "400":
          description: "Invalid status value"
    post:
      tags:
        - "menu"
      summary: "Add a new menu"
      operationId: "createMenu"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - $ref: '#/parameters/menuBody'
      responses:
        "400":
          description: "Bad Request"

  /menus/{id}:
    get:
      tags:
        - "menu"
      summary: "Get a food menu by id"
      operationId: "getFoodMenu"
      produces:
        - "application/json"
      parameters:
        - $ref: '#/parameters/idPath'
      responses:
        200:
          description: "successful operation"
          schema:
            type: array
            items:
              $ref: "#/definitions/MenuList"
        400:
          description: Bad request
        404:
          description: Not found
    put:
      tags:
        - "menu"
      summary: "Update a menu"
      operationId: "updateFoodMenu"
      produces:
        - "application/json"
      parameters:
        - $ref: '#/parameters/idPath'
        - $ref: '#/parameters/menuBody'
      responses:
        200:
          description: "successful operation"
        400:
          description: Bad request
        404:
          description: Not found
    delete:
      tags:
        - "menu"
      summary: "Delete a menu"
      operationId: "deleteFoodMenu"
      produces:
        - "application/json"
      parameters:
        - $ref: '#/parameters/idPath'
      responses:
        200:
          description: "successful operation"
        400:
          description: Bad request
        404:
          description: Not found
  /menus/{id}/items:
    get:
      tags:
        - "menuItems"
      summary: "Get a food menu items by menu id"
      operationId: "getFoodMenuItems"
      produces:
        - "application/json"
      parameters:
        - $ref: '#/parameters/idPath'
        - $ref: '#/parameters/limitQuery'
        - $ref: '#/parameters/offsetQuery'
        - name: "categoryId"
          in: "query"
          description: "Filter results by category id"
          type: integer
          format: int64
      responses:
        200:
          description: "successful operation"
          schema:
            type: array
            items:
              $ref: "#/definitions/MenuItemList"
        400:
          description: Bad request
    post:
      tags:
        - "menuItems"
      summary: "Add a new menu"
      operationId: "createMenuItem"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - $ref: '#/parameters/idPath'
        - $ref: '#/parameters/menuItemBody'
      responses:
        "400":
          description: "Bad Request"
  /menus-items/{id}:
    put:
      tags:
        - "menuItems"
      summary: "Update a menu item"
      operationId: "updateFoodMenuItem"
      produces:
        - "application/json"
      parameters:
        - $ref: '#/parameters/idPath'
        - $ref: '#/parameters/menuItemBody'
      responses:
        200:
          description: "successful operation"
        400:
          description: Bad request
        404:
          description: Not found
    delete:
      tags:
        - "menuItems"
      summary: "Delete a menu item"
      operationId: "deleteFoodMenuItem"
      produces:
        - "application/json"
      parameters:
        - $ref: '#/parameters/idPath'
      responses:
        200:
          description: "successful operation"
        400:
          description: Bad request
        404:
          description: Not found
  /menus-items/{id}/extras:
    post:
      tags:
        - "extras"
      summary: "Add extra to menu item"
      operationId: "assignMenuItemExtra"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - $ref: '#/parameters/idPath'
        - name: "body"
          in: "body"
          schema:
            $ref: '#/definitions/AssignExtraRequest'

      responses:
        "400":
          description: "Bad Request"
  /categories:
    get:
      tags:
        - "category"
      summary: "Get a list of food categories"
      operationId: "getFoodCategorys"
      produces:
        - "application/json"
      parameters:
        - $ref: '#/parameters/limitQuery'
        - $ref: '#/parameters/offsetQuery'
      responses:
        "200":
          description: "successful operation"
          schema:
            type: array
            items:
              $ref: "#/definitions/CategoryList"
        "400":
          description: "Invalid status value"
    post:
      tags:
        - "category"
      summary: "Add a new category"
      operationId: "createCategory"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - $ref: '#/parameters/categoryBody'
      responses:
        "400":
          description: "Bad Request"

  /categories/{id}:
    get:
      tags:
        - "category"
      summary: "Get a food category by id"
      operationId: "getFoodCategory"
      produces:
        - "application/json"
      parameters:
        - $ref: '#/parameters/idPath'
      responses:
        200:
          description: "successful operation"
          schema:
            type: array
            items:
              $ref: "#/definitions/CategoryList"
        400:
          description: Bad request
        404:
          description: Not found
    put:
      tags:
        - "category"
      summary: "Update a category"
      operationId: "updateFoodCategory"
      produces:
        - "application/json"
      parameters:
        - $ref: '#/parameters/idPath'
        - $ref: '#/parameters/categoryBody'
      responses:
        200:
          description: "successful operation"
        400:
          description: Bad request
        404:
          description: Not found
    delete:
      tags:
        - "category"
      summary: "Delete a category"
      operationId: "deleteFoodCategory"
      produces:
        - "application/json"
      parameters:
        - $ref: '#/parameters/idPath'
      responses:
        200:
          description: "successful operation"
        400:
          description: Bad request
        404:
          description: Not found
  /extras:
    get:
      tags:
        - "extra"
      summary: "Get a list of food extras"
      operationId: "getFoodExtras"
      produces:
        - "application/json"
      parameters:
        - $ref: '#/parameters/limitQuery'
        - $ref: '#/parameters/offsetQuery'
      responses:
        "200":
          description: "successful operation"
          schema:
            type: array
            items:
              $ref: "#/definitions/ExtraList"
        "400":
          description: "Invalid status value"
    post:
      tags:
        - "extra"
      summary: "Add a new extra"
      operationId: "createExtra"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - $ref: '#/parameters/extraBody'
      responses:
        "400":
          description: "Bad Request"

  /extras/{id}:
    get:
      tags:
        - "extra"
      summary: "Get a food extra by id"
      operationId: "getFoodExtra"
      produces:
        - "application/json"
      parameters:
        - $ref: '#/parameters/idPath'
      responses:
        200:
          description: "successful operation"
          schema:
            type: array
            items:
              $ref: "#/definitions/ExtraList"
        400:
          description: Bad request
        404:
          description: Not found
    put:
      tags:
        - "extra"
      summary: "Update a extra"
      operationId: "updateFoodExtra"
      produces:
        - "application/json"
      parameters:
        - $ref: '#/parameters/idPath'
        - $ref: '#/parameters/extraBody'
      responses:
        200:
          description: "successful operation"
        400:
          description: Bad request
        404:
          description: Not found
    delete:
      tags:
        - "extra"
      summary: "Delete a extra"
      operationId: "deleteFoodExtra"
      produces:
        - "application/json"
      parameters:
        - $ref: '#/parameters/idPath'
      responses:
        200:
          description: "successful operation"
        400:
          description: Bad request
        404:
          description: Not found
definitions:
  MenuList:
    properties:
      results:
        type: array
        items:
          $ref: "#/definitions/Menu"
  MenuItemList:
    properties:
      results:
        type: array
        items:
          $ref: "#/definitions/MenuItem"
  CategoryList:
    properties:
      results:
        type: array
        items:
          $ref: "#/definitions/Category"
  ExtraList:
    properties:
      results:
        type: array
        items:
          $ref: "#/definitions/Extra"
  Menu:
    properties:
      title:
        type: string
      status:
        type: string
        enum:
          - published
          - draft
        default: draft

  Category:
    properties:
      title:
        type: string
      description:
        type: string
  Extra:
    properties:
      title:
        type: string
      description:
        type: string
      price:
        type: number
  MenuItem:
    properties:
      categoryId:
        type: integer
        format: int64
      title:
        type: string
      description:
        type: string
      price:
        type: number
      extras:
        type: array
        items:
          $ref: "#/definitions/Extra"
  MenuItemRequest:
    properties:
      categoryId:
        type: integer
        format: int64
      title:
        type: string
      description:
        type: string
      price:
        type: number
  AssignExtraRequest:
    type: object
    properties:
      extraId:
        type: integer
        format: int64
parameters:
  idPath:
    name: "id"
    in: "path"
    description: "Id to query the resource by"
    type: integer
    format: int64
    required: true

  menuBody:
    in: "body"
    name: "body"
    description: "Menu object"
    required: true
    schema:
      $ref: "#/definitions/Menu"

  menuItemBody:
    in: "body"
    name: "body"
    required: true
    schema:
      $ref: "#/definitions/MenuItemRequest"

  categoryBody:
    in: "body"
    name: "body"
    description: "Category object"
    required: true
    schema:
      $ref: "#/definitions/Category"

  extraBody:
    in: "body"
    name: "body"
    description: "Extra object"
    required: true
    schema:
      $ref: "#/definitions/Extra"

  limitQuery:
    in: query
    name: limit
    type: integer
    default: 10

  offsetQuery:
    in: query
    name: offset
    type: integer
    default: 0
